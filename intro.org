* შესავალი პროგრამირებაში 

http://pclib.github.io/safari/program/learning-python/Text/httpatomoreillycomsourceoreillyimages1695851.png
http://www.python-course.eu/images/blocks.png
 

პროგრამირების ენებიდან პითონი ერთერთი ყველაზე მარტივად გასაგები და მძლავრი პროგრამირების ენაა.
პითონი მიეკუთვნება მრავალმიზნობრივ პროგრამირების ენას. პითონის საშუალებით შესაძლებელია შეიქმნას სხვადასხვა ტიპის პროგრამები, როგორებიცა: ვებსერვერული აპლიკაციები, 
მობილური აპლიცაციები, სერვერის ოპტიმიზაცია-კონფიგურაცისა და მართვის სკრიპტები, დესკტოპ(პერსონალურ კომპიუტერზე დაფუნძნებული)-აპლიკაციები.

გადა ამისა, პითონი მულტიპლათფორმული პროგრამირების ენაა, რაც გულისხმობს, რომ პითონის ინტერპრეტატორი/ვირტუალური მანქანა  მუშობს ნებიემიერ პლატფორმაზე, 
მაგალითად: Linux, MacOS, Windows და ა.შ.

პითონის ინტერპრეტატორი და ვირტუალური პროგრამა შევიძლია წარმოვიდგინოთ, როგორც პროგრამა რომელიც ჩვენს დაწერილ კოდს ამუშავებს კომპიუტერზე


###### ჩვეულებრივ კომპიუტერში პროგრამა სრულდება თანმიმდევრობით, დროის გაკვეულ მომენტში სრულდება მხოლოდ ერთი ბრძანება მაგალითად:



** პითონის სასწავლო ინტერაქტიული საიტები

მოცემულ საიტებზე, შეგიძლიათ თამაშით ისწავლოთ პროგრამირება.
https://codecombat.com/play
https://groklearning.com/
https://www.codeavengers.com/profile#py1


** ინსტალაცია

ინსტალაცია ვინდოუსისთვის
გადადით ვებ გვერდზე https://www.python.org/downloads/ და გადმოიწერეთ უახლესი ვერსია მაგ. Python 3.5.2

ინსტალაციის დროს აუცილებლად მოვნიშნოთ
Add Python 3.5 to PATH
შემდეგ მიჰყევით სტანდარტულად next > next >  next


ინსტალაცია linux-debian/ubuntu-ზე

sudo apt-get install python3


** პირველი ნაბიჯები
გავხსნათ პითონის ინტერაქტიული ფანჯარა შემდეგნაირად:

მოცემულ ვიდეოში კარგად არის ახსნილი თუ როგორ გახსნათ ინტერაქტიული ინტერპრეტატორი და IDLE ტექსტური ედიტორი
https://www.youtube.com/watch?v=kXbpB5_ywDw


უკვე ტარადიციაა რომ პროგრამირების ენის შესწავლის პროცესი იწყება, ეკრანზე 'hello, world'-ის დაწერით. 
პითიონით კონსოლზე (ეკრანზე სადაც ტექტი იწერება) ინფორამციის გამოტანა ხდება print ფუნქციით მაგ.

print('hello, world')

ეკრანზე დაწერს 'hello, world'-ს

მნიშვნელოვანია აღინიშნოს, რომ print-ის შიგნით ტექსტი მოთავსებულია ერთკბილიანი ბრჭყალების მაგ. 'hello, world'
ესევე შესაძლებელია ტექსტი ჩაიწეროს ორკბილიანი ბრჭყალით შემდეგნაირად "hello, world". 

ტექსტის სწორი და არასწორი ჩაწერის შემთხვევები

სწორია
print('hello, world')

სწორია
print("hello, world")

არასწორია, ქვემოთ მოყვანილი ორივე შემთხვევა
print("hello, world)
print('hello, world)
რადგან ტექსტის ბოლოს ბრჭყალი არ არის დახურული


არასწორია
print(hello, world)
რადგან ტექსტი მოცემულია ბრჭყალების გარეშე

არასწორია
print('hello, world")
print("hello, world')
რადგან ტექსტი მოცემულია სხვადასხვა ტიპის ბრჭყალების შიგნით


** ცვლადები

პროგამირების ენებში ცვლადი შეგვიძლია წარმოვიდგინოთ, როგორც რაიმე ადგილი სადაც დროებით ვინახავთ ინფორმაციას. 
გარგად გასაგებად კონპიუტერის მეხსიერებას შევადარებ საწყობს, ხოლო ცვლადებს შევადარებ ყუთებს სადაც სხვადასხვა 
სახის ინფორმაციაა მოთავსებული.
პროგრამის წერის დროს შესაძლებელია გამოვყოთ ინფორმაციის რამოდენიმე სახე მაგალითად:
მთელი რიცხვი (integer)  როგორიცაა 1, 3, 4, 6, 101, და ა.შ.,
ათწილადი რიცხვები (float) როგორიცაა 0.3, 4.5, 23.89293, და ა.შ.,
ტექსტი (string), ნებისმიერი სიმბოლოების თანმიმდევრობა, მაგალითად string-ის მაგალითებია: 'amsak323', "asd22323qweq", '234324', 'asjfjdsi', ....
ბულის ტიპის ინფორმაცია, რომლიც მხოლოდ ორ მნიშვნელობას იღება True (ჭეშმარიტი) ან False(ცრუ/არაჭეშმარიტი).

როგორც უკვე მიხვდით, ჩვენს მიერ ზემოთ დაწერილი ტექსტი "hello, world" არის string-ის ტიპის ინფორმაცია

ისევე როგორც საწყობში ყველა ყუთს აქვს ზედ დაწერილი უნიკალური დასახელება, ასევე პროგრამის მეხსიერებაში შენახულ ცვლადებსაც აქვს სახელები. 
მოდი ვნახოთ თუ როგორ შეგვიძლია შევქმანთ ცვლადები.

შევქმანათ ცვლადი და მას მივანიჭოთ რაიმე კონკრეტული სახელი

a = 13

სადაც a არის ცვლადის დასახელება, ხოლო 13 მისი მნიშვნელობა.
ასევე შეგვიძლია a  ცვლადში შევინახოთ ხვა მნიშვნელობა მაგალითად

print(a)

print(a) ეკრანზე გამოგვიტანს ცვლადის მნიშვნელობას, /ყურადგება მიაქციეთ a-ს ჩანაწერს print-ის შიგნით, ის არ არის ბრჭყალებით ჩაწერილი (როგორც მაგალითად 'hello, world')/
ეს იმიტომ, რომ a ტექსტი კი აღარ არი არამედ, ცვლადის დასახელებაა.

a = 92
print(a)

იგივე სახით ხდება სხვა ტიპის ცვლადისთვის ინფორმაციის მინიჭება, მაგ

f = 3.5
print(f)

f = 4.5
print(f)


ასევე არსებობს ეგრედ წოდებული ბულის ტიპის ცვლადები, რომელმაც შეიძლება მიიღოს მხოლოდ ორი მნიშვნელობა True (ჭეშმარიტი) ან False(ცრუ/არაჭეშმარიტი).

b = Ture 
print(b)

b = False
print(b)

** ოპერატორები

პითონით შეგვიძლია მოვახდინოთ მატემეტიკური გამოთვლები როგორიცაა: მიმატება, გამრავლება, გაყოფა, ახარისხება და ა.შ
ჩამოვწეროთ ძირითადი ოპერატორები და მისი მატემატიკური განმარტებები


+,  მიმატება
-,  გამოკლება
*,  გამრავლება
/,  გაყოფა
**, ხარისხში აყვანა


მაგალითად 

3 + 5

45 - 5

5 * 5

12 / 2

3 * 3


ასევე მსგავსი მოქმედებები შეგვიძლია ჩავატაროდ ცვლადების სახითაც 
მაგალითად

a = 34

b = 14

c = a - b
print(c)

** ============================= დამატებითი მაგალითები  =====================================
დამატებით მოვიყვან რამოდენიმე მაგალითს, რომელიც ლექციაზე გავნიხილე.
შეიძლება გაგიჭირდეთ მოცემული მაგალითების გაგება, მაგრამ არაუშავს შემდგომი ლექციების თემაა მაინც.


ციკლის მგალითი

#+BEGIN_SRC python
for n in range(6):
    print(n)

for n in range(4):
    print('hello, world')
#+END_SRC



პირობითი ოპერატორის მაგალითი

#+BEGIN_SRC python
a = False

if a:
    print('piroba chesmaritia')

a = True 

if a:
    print('piroba chesmaritia')
#+END_SRC
